

// Initialise le SmartContract sélectionné au lancement de l'application
//// Par défaut il s'agit du SmartContract pré déployé sur la blockchain publique

	// Addresse du SmartContract
	// Détail du SmartContract https://etherscan.io/address/0x50c5712624b58905c19aee87deca593a2690e3f4#code	
	var MainSmartContract = "0x50c5712624b58905c19aee87deca593a2690e3f4";

	if(DocSignCollection.findOne()==undefined)
	{
		// La base de contract est vide
		// On ajoute le smart contract pré déployé
		DocSignCollection.insert({ Name: "SmartContract Principal (Main Network)", Addr: MainSmartContract, Selected: 1 });
	}
	else if(DocSignCollection.findOne({Selected : 1}) == undefined){
		// La base n'est pas vide mais aucun smart contractest déployé
		// On sélectionne le premier SmartContract de la base
		DocSignCollection.update({_id : DocSignCollection.findOne()._id} , {$set: {Selected:1}});
	}

	// Récupère le taux de change ether / euro et le met à jour toutes les heures
	Session.set('EthToolsPriceEur',EthTools.ticker.findOne('eur').price);
	Meteor.setInterval(function(){
		Session.set('EthToolsPriceEur',EthTools.ticker.findOne('eur').price);
	},
	3600000)
	

	// Définition du ByteCode et de l'ABI
	// pour déployer des nouveaux SmartContracts
	// pour l'instancier dans la fonction globale SetContractDefinition
	Session.set('ByteCode', '60606040525b3373ffffffffffffffffffffffffffffffffffffffff167f1449abf21e49fd025f33495e77f7b1461caefdd3d4bb646424a3f445c4576a5b60405180905060405180910390a25b6106b88061005a6000396000f360606040523615610053576000357c010000000000000000000000000000000000000000000000000000000090048063a87d942c14610060578063c02d1e0214610083578063fc1f2a70146101e557610053565b61005e5b610002565b565b005b61006d600480505061028b565b6040518082815260200191505060405180910390f35b61009960048080359060200190919050506102a0565b60405180868152602001806020018573ffffffffffffffffffffffffffffffffffffffff1681526020018060200184815260200183810383528781815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561014e5780601f106101235761010080835404028352916020019161014e565b820191906000526020600020905b81548152906001019060200180831161013157829003601f168201915b50508381038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101d15780601f106101a6576101008083540402835291602001916101d1565b820191906000526020600020905b8154815290600101906020018083116101b457829003601f168201915b505097505050505050505060405180910390f35b6102896004808035906020019091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091908035906020019082018035906020019191908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050909091905050610310565b005b6000600060005080549050905061029d565b90565b600060005081815481101561000257906000526020600020906005020160005b9150905080600001600050549080600101600050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600301600050908060040160005054905085565b60006000508054806001018281815481835581811511610472576005028160050283600052602060002091820191016104719190610349565b8082111561046d576000600082016000506000905560018201600050805460018160011615610100020316600290046000825580601f1061038a57506103c7565b601f0160209004906000526020600020908101906103c691906103a8565b808211156103c257600081815060009055506001016103a8565b5090565b5b506002820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560038201600050805460018160011615610100020316600290046000825580601f1061041b5750610458565b601f0160209004906000526020600020908101906104579190610439565b808211156104535760008181506000905550600101610439565b5090565b5b50600482016000506000905550600501610349565b5090565b5b5050509190906000526020600020906005020160005b60a060405190810160405280878152602001868152602001338152602001858152602001428152602001509091909150600082015181600001600050556020820151816001016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061051a57805160ff191683800117855561054b565b8280016001018555821561054b579182015b8281111561054a57825182600050559160200191906001019061052c565b5b5090506105769190610558565b808211156105725760008181506000905550600101610558565b5090565b505060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055506060820151816003016000509080519060200190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105fe57805160ff191683800117855561062f565b8280016001018555821561062f579182015b8281111561062e578251826000505591602001919060010190610610565b5b50905061065a919061063c565b80821115610656576000818150600090555060010161063c565b5090565b5050608082015181600401600050555050503373ffffffffffffffffffffffffffffffffffffffff167fdcfefddfe354ab15def7a2a6a8758e2ad4100c920318c627db94e29d833e156760405180905060405180910390a25b50505056')
	
	Session.set('ABI', [{"constant":true,"inputs":[],"name":"getCount","outputs":[{"name":"","type":"uint256"}],"type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"a_document","outputs":[{"name":"version","type":"uint256"},{"name":"name","type":"string"},{"name":"creator","type":"address"},{"name":"hash","type":"string"},{"name":"date","type":"uint256"}],"type":"function"},{"constant":false,"inputs":[{"name":"_version","type":"uint256"},{"name":"_name","type":"string"},{"name":"_hash","type":"string"}],"name":"Add","outputs":[],"type":"function"},{"inputs":[],"type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"Added","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"_from","type":"address"}],"name":"Created","type":"event"}])
	Session.set('ContractEstimaGas',web3.eth.estimateGas({from: web3.eth.defaultAccount, data: Session.get('ByteCode') }));

	// On enregistre l'adresse du SmartContract sélectionné
	Session.set('SelectedSmartContractAddr', DocSignCollection.findOne({Selected : 1}).Addr);
	console.log(DocSignCollection.findOne({Selected : 1}).Addr);

	if(web3.isConnected()) {
		// On instancie le SmarContract sélectionné
		UI._globalHelpers.SetContractDefinition();
	}
